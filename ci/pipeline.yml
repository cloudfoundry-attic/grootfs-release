---
groups:
- name: all
  jobs:
  - grootfs
  - bump-dependencies
  - bump-grootfs-release
  - create-grootfs-release
  - deploy-grootfs-bench
  - performance-tests
  - grootfs-bench
  - bump-grootfs-bench-release
  - create-grootfs-bench-release
  - deploy-grootfs-bench
  - deploy-garden-grootfs
  - gats
  - deploy-cf
  - deploy-datadog-nozzle
  - CATs
- name: grootfs
  jobs:
  - grootfs
  - bump-dependencies
  - bump-grootfs-release
  - create-grootfs-release
  - deploy-grootfs-bench
  - performance-tests
- name: grootfs-bench
  jobs:
  - grootfs-bench
  - bump-grootfs-bench-release
  - create-grootfs-bench-release
  - deploy-grootfs-bench
- name: grootfs-garden
  jobs:
  - deploy-garden-grootfs
  - gats
- name: cf-grootfs
  jobs:
  - deploy-cf
  - deploy-datadog-nozzle
  - CATs
- name: tools
  jobs:
  - build-grootfs-ci-image
- name: ship-it
  jobs:
  - bump-major-grootfs-release
  - bump-minor-grootfs-release
  - bump-patch-grootfs-release
  - merge-master-into-develop
  - ship-bosh-release
  - ship-grootfs
  - tag-grootfs-ci-image

resources:
- name: cats-concourse-task
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cats-concourse-task.git

- name: cf-acceptance-tests
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: monday-update
  type: time
  source:
    start: 7:00 AM
    stop: 8:00 AM
    location: Europe/London
    days:
    - Monday

- name: garden-runc-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: develop
    ignore_paths:
    - ci

- name: git-cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master

- name: cf-deployment
  type: bosh-deployment
  source:
    target: {{gamora-bosh-target}}
    username: {{gamora-bosh-username}}
    password: {{gamora-bosh-password}}
    deployment: cf
    ignore_ssl: true

- name: garden-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release

- name: cflinuxfs2-rootfs-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cflinuxfs2-rootfs-release

- name: datadog-nozzle-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/datadog-firehose-nozzle-release

- name: datadog-nozzle-deployment
  type: bosh-deployment
  source:
    target: {{gamora-bosh-target}}
    username: {{gamora-bosh-username}}
    password: {{gamora-bosh-password}}
    deployment: datadog-firehose-nozzle
    ignore_ssl: true

- name: grootfs-git-repo
  type: git
  source:
    uri: {{grootfs-git-repo}}
    branch: master
    private_key: {{gnome-private-key}}

- name: grootfs-release-develop
  type: git
  source:
    uri: {{grootfs-release-git-repo}}
    branch: develop
    private_key: {{gnome-private-key}}

- name: grootfs-release-master
  type: git
  source:
    uri: {{grootfs-release-git-repo}}
    branch: master
    private_key: {{gnome-private-key}}

- name: grootfs-release-version
  type: semver
  source:
    bucket: grootfs-ci-meta
    key: {{s3-version-key}}
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    region_name: eu-west-1
    initial_version: 0.1.0-rc.1
    driver: s3

- name: grootfs-ci-secrets
  type: git
  source:
    uri: git@github.com:cloudfoundry/grootfs-ci-secrets.git
    branch: master
    private_key: {{gnome-private-key}}

- name: grootfs-release-tarball
  type: s3
  source:
    bucket: grootfs-bosh-releases
    regexp: {{s3-release-tarball-regexp}}
    region_name: eu-west-1
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: grootfs-bench-release-tarball
  type: s3
  source:
    bucket: grootfs-bench-releases
    regexp: releases/grootfs-bench-(.*).tgz
    region_name: eu-west-1
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}

- name: grootfs-bench-git-repo
  type: git
  source:
    uri: git@github.com:cloudfoundry/grootfs-bench.git
    branch: master
    private_key: {{gnome-private-key}}
    ignore_paths:
    - ci/grootfs-bench-tests.yml

- name: grootfs-bench-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/grootfs-bench-release.git
    branch: master
    private_key: {{gnome-private-key}}

- name: grootfs-bench-release-version
  type: semver
  source:
    bucket: grootfs-ci-meta
    key: grootfs/bosh-bench-release-version
    access_key_id: {{aws-access-key-id}}
    secret_access_key: {{aws-secret-access-key}}
    region_name: eu-west-1
    initial_version: 0.1.0-rc.1
    driver: s3

- name: performance-time-trigger
  type: time
  source:
    interval: 60m

- name: grootfs-bench-deployment
  type: bosh-deployment
  source:
    target: {{gamora-bosh-target}}
    username: {{gamora-bosh-username}}
    password: {{gamora-bosh-password}}
    deployment: grootfs-bench
    ignore_ssl: true

- name: garden-grootfs-deployment
  type: bosh-deployment
  source:
    target: {{gamora-bosh-target}}
    username: {{gamora-bosh-username}}
    password: {{gamora-bosh-password}}
    deployment: garden-grootfs
    ignore_ssl: true

- name: gamora-bosh-stemcell
  type: bosh-io-stemcell
  source:
    name: {{gamora-bosh-stemcell-name}}

- name: slack-alert
  type: slack-notification-docker
  source:
    url: {{slack-alert-url}}

- name: grootfs-tracker
  type: tracker-fixed
  source:
    tracker_url: https://www.pivotaltracker.com
    project_id: "1661239"
    token: {{garden-tracker-token}}

- name: grootfs-standalone-gh-release
  type: github-release
  source:
    user: {{github-organization}}
    repository: grootfs
    access_token: {{github-access-token}}
    drafts: true

- name: grootfs-gh-release
  type: github-release
  source:
    user: {{github-organization}}
    repository: grootfs-release
    access_token: {{github-access-token}}
    drafts: true

- name: grootfs-git-repo-dockerfile
  type: git
  source:
    uri: {{grootfs-git-repo}}
    branch: master
    private_key: {{gnome-private-key}}
    paths:
    - Dockerfile

- name: grootfs-ci-image
  type: docker-image
  source:
    repository: cfgarden/grootfs-ci
    username: {{dockerhub-username}}
    password: {{dockerhub-password}}

jobs:
- name: grootfs
  public: true
  plan:
  - aggregate:
    - get: grootfs-git-repo
      trigger: true
  - do:
    - aggregate:
      - task: unit-tests
        privileged: true
        file: grootfs-git-repo/ci/tasks/unit-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
      - task: integration-tests-OVERLAY+XFS (ROOT)
        privileged: true
        file: grootfs-git-repo/ci/tasks/integration-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
          GROOTFS_TEST_UID: 0
          GROOTFS_TEST_GID: 0
          VOLUME_DRIVER: overlay-xfs
      - task: integration-tests-BTRFS (ROOT)
        privileged: true
        file: grootfs-git-repo/ci/tasks/integration-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
          VOLUME_DRIVER: btrfs
          GROOTFS_TEST_UID: 0
          GROOTFS_TEST_GID: 0
      - task: integration-tests-BTRFS (GROOT)
        privileged: true
        file: grootfs-git-repo/ci/tasks/integration-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
          GROOTFS_TEST_UID: 1000
          GROOTFS_TEST_GID: 1000
          VOLUME_DRIVER: btrfs
      - task: go-vet
        file: grootfs-git-repo/ci/tasks/go-vet.yml
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: System Failure. Explosion Imminent. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: bump-dependencies
  public: true
  plan:
  - get: monday-update
    trigger: true
  - get: grootfs-git-repo
    params:
      submodules: all
  - task: bump-dependencies
    file: grootfs-git-repo/ci/tasks/bump-dependencies.yml
  - do:
    - aggregate:
      - task: unit-tests
        privileged: true
        input_mapping:
          grootfs-git-repo: grootfs-git-repo-updated
        file: grootfs-git-repo/ci/tasks/unit-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
      - task: integration-tests-OVERLAY+XFS
        privileged: true
        input_mapping:
          grootfs-git-repo: grootfs-git-repo-updated
        file: grootfs-git-repo/ci/tasks/integration-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
          VOLUME_DRIVER: overlay-xfs
      - task: integration-tests-BTRFS
        privileged: true
        input_mapping:
          grootfs-git-repo: grootfs-git-repo-updated
        file: grootfs-git-repo/ci/tasks/integration-tests.yml
        params:
          REGISTRY_USERNAME: {{dockerhub-username}}
          REGISTRY_PASSWORD: {{dockerhub-password}}
          VOLUME_DRIVER: btrfs
      - task: go-vet
        file: grootfs-git-repo/ci/tasks/go-vet.yml
        input_mapping:
          grootfs-git-repo: grootfs-git-repo-updated
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: Bump dependencies failed. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
  - put: grootfs-git-repo
    params:
      repository: grootfs-git-repo-updated

- name: bump-grootfs-release
  serial_groups: [grootfs-release-creation]
  plan:
    - do:
      - aggregate:
        - get: grootfs-release-develop
        - get: grootfs-git-repo
          trigger: true
          passed:
          - grootfs
      - task: bump-grootfs-release
        file: grootfs-release-develop/ci/tasks/bump-grootfs-release.yml
      - put: grootfs-release-develop
        params:
          repository: bumped-release-git
      on_failure:
        put: slack-alert
        params:
          username: {{slack-alert-username}}
          icon_url: {{slack-alert-icon-url}}
          channel: {{slack-alert-channel}}
          text: "<!subteam^S1U0HSJ9E|grootfsteam>: What the BOSH? You can bump it yourself. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: create-grootfs-release
  serial_groups: [grootfs-release-creation]
  plan:
  - aggregate:
    - get: grootfs-release-version
      params:
        pre: rc
    - get: grootfs-release-develop
      trigger: true
    - get: grootfs-git-repo
      passed:
      - bump-grootfs-release
  - put: grootfs-release-version
    params:
      file: grootfs-release-version/number
  - do:
    - task: create-grootfs-release
      file: grootfs-release-develop/ci/tasks/create-grootfs-release.yml
    - put: grootfs-release-tarball
      params:
        file: bosh-release/grootfs-*.tgz
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: What the BOSH? You can deploy it yourself. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: deploy-garden-grootfs
  serial_groups: [grootfs-garden-deployment]
  plan:
  - do:
    - aggregate:
      - get: gamora-bosh-stemcell
      - get: grootfs-ci-secrets
      - get: grootfs-release-develop
      - get: garden-release
        trigger: true
      - get: grootfs-release-tarball
        trigger: true
        passed:
        - create-grootfs-release
    - put: garden-grootfs-deployment
      params:
        manifest: grootfs-ci-secrets/deployments/garden-grootfs/gcp.yml
        releases:
        - garden-release/*.tgz
        - grootfs-release-tarball/*.tgz
        stemcells:
        - gamora-bosh-stemcell/*.tgz
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: System Failure. Explosion Imminent. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: gats
  serial_groups: [grootfs-garden-deployment]
  plan:
    - aggregate:
      - get: grootfs-release-develop
        trigger: true
        passed: [deploy-garden-grootfs]
      - get: garden-release
        passed: [deploy-garden-grootfs]
        trigger: true
      - get: garden-runc-release
    - aggregate:
      - task: gats-btrfs
        file: grootfs-release-develop/ci/tasks/gats.yml
        params:
          GARDEN_ADDRESS: {{gamora-btrfs-garden-address}}
      - task: gats-overlay-xfs
        file: grootfs-release-develop/ci/tasks/gats.yml
        params:
          GARDEN_ADDRESS: {{gamora-overlay-xfs-garden-address}}

- name: bump-grootfs-bench-release
  serial: true
  plan:
    - aggregate:
      - get: grootfs-bench-release
      - get: grootfs-bench-git-repo
        trigger: true
        passed:
        - grootfs-bench
    - do:
      - task: bump-grootfs-bench-release
        file: grootfs-bench-release/ci/tasks/bump-grootfs-bench-release.yml
      - put: grootfs-bench-release
        params:
          repository: bumped-release-git
      on_failure:
        put: slack-alert
        params:
          username: {{slack-alert-username}}
          icon_url: {{slack-alert-icon-url}}
          channel: {{slack-alert-channel}}
          text: "<!subteam^S1U0HSJ9E|grootfsteam>: It's not the end of the world, it's just the end of this pipeline. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: create-grootfs-bench-release
  serial: true
  plan:
    - aggregate:
      - get: gamora-bosh-stemcell
      - get: grootfs-ci-secrets
      - get: grootfs-bench-release
        trigger: true
      - get: grootfs-bench-git-repo
        passed:
        - bump-grootfs-bench-release
      - get: grootfs-bench-release-version
        params:
          pre: rc
    - do:
      - put: grootfs-bench-release-version
        params:
          file: grootfs-bench-release-version/number
      - task: create-release
        file: grootfs-bench-release/ci/tasks/create-grootfs-bench-release.yml
      - put: grootfs-bench-release-tarball
        params:
          file: bosh-release/grootfs-bench-*.tgz
      on_failure:
        put: slack-alert
        params:
          username: {{slack-alert-username}}
          icon_url: {{slack-alert-icon-url}}
          channel: {{slack-alert-channel}}
          text: "<!subteam^S1U0HSJ9E|grootfsteam>: You know what, fix it. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: deploy-grootfs-bench
  serial_groups:
  - bosh-deployment
  plan:
  - do:
    - aggregate:
      - get: grootfs-release-develop
        trigger: true
        passed:
        - create-grootfs-release
      - get: grootfs-release-tarball
        trigger: true
        passed:
        - create-grootfs-release
      - get: grootfs-bench-release
        passed:
        - create-grootfs-bench-release
      - get: grootfs-bench-release-tarball
        trigger: true
        passed:
        - create-grootfs-bench-release
      - get: gamora-bosh-stemcell
        trigger: true
      - get: grootfs-ci-secrets
    - task: generate-manifest
      file: grootfs-release-develop/ci/tasks/generate-grootfs-bench-manifest.yml
      params:
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APP_KEY: {{datadog-application-key}}
    - put: grootfs-bench-deployment
      params:
        manifest: manifests/grootfs-bench.yml
        releases:
        - grootfs-release-tarball/*.tgz
        - grootfs-bench-release-tarball/*.tgz
        stemcells:
        - gamora-bosh-stemcell/*.tgz
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: What the BOSH? You can deploy it yourself. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: performance-tests
  serial_groups:
  - bosh-deployment
  plan:
  public: true
  plan:
  - do:
    - aggregate:
      - get: grootfs-release-develop
        trigger: true
        passed:
        - deploy-grootfs-bench
      - get: grootfs-bench-release
        trigger: true
        passed:
        - deploy-grootfs-bench
      - get: performance-time-trigger
        trigger: true
      - get: grootfs-ci-secrets
    - task: generate-manifest
      file: grootfs-release-develop/ci/tasks/generate-grootfs-bench-manifest.yml
      params:
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APP_KEY: {{datadog-application-key}}
    - task: benchmark-LOCAL-BTRFS
      privileged: true
      file: grootfs-bench-release/ci/tasks/performance-tests.yml
      params:
        BOSH_TARGET: {{gamora-bosh-target}}
        BOSH_CLIENT: {{gamora-bosh-username}}
        BOSH_CLIENT_SECRET: {{gamora-bosh-password}}
        BOSH_DEPLOYMENT: grootfs-bench
        BOSH_CERTIFICATES: {{gamora-bosh-certificates}}
        ERRAND_NAME: grootfs-bench-local-btrfs
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APPLICATION_KEY: {{datadog-application-key}}
    - task: benchmark-LOCAL-OVERLAY-XFS
      privileged: true
      file: grootfs-bench-release/ci/tasks/performance-tests.yml
      params:
        BOSH_TARGET: {{gamora-bosh-target}}
        BOSH_CLIENT: {{gamora-bosh-username}}
        BOSH_CLIENT_SECRET: {{gamora-bosh-password}}
        BOSH_DEPLOYMENT: grootfs-bench
        BOSH_CERTIFICATES: {{gamora-bosh-certificates}}
        ERRAND_NAME: grootfs-bench-local-overlay-xfs
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APPLICATION_KEY: {{datadog-application-key}}
    - task: benchmark-REMOTE-BTRFS
      privileged: true
      file: grootfs-bench-release/ci/tasks/performance-tests.yml
      params:
        BOSH_TARGET: {{gamora-bosh-target}}
        BOSH_CLIENT: {{gamora-bosh-username}}
        BOSH_CLIENT_SECRET: {{gamora-bosh-password}}
        BOSH_DEPLOYMENT: grootfs-bench
        BOSH_CERTIFICATES: {{gamora-bosh-certificates}}
        ERRAND_NAME: grootfs-bench-remote-btrfs
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APPLICATION_KEY: {{datadog-application-key}}
    - task: benchmark-REMOTE-OVERLAY-XFS
      privileged: true
      file: grootfs-bench-release/ci/tasks/performance-tests.yml
      params:
        BOSH_TARGET: {{gamora-bosh-target}}
        BOSH_CLIENT: {{gamora-bosh-username}}
        BOSH_CLIENT_SECRET: {{gamora-bosh-password}}
        BOSH_DEPLOYMENT: grootfs-bench
        BOSH_CERTIFICATES: {{gamora-bosh-certificates}}
        ERRAND_NAME: grootfs-bench-remote-overlay-xfs
        DATADOG_API_KEY: {{datadog-api-key}}
        DATADOG_APPLICATION_KEY: {{datadog-application-key}}
    - put: grootfs-tracker
      params:
        repos:
        - grootfs-release-develop/src/code.cloudfoundry.org/grootfs
        - grootfs-release-develop
        - grootfs-bench-release/src/code.cloudfoundry.org/grootfs-bench
        - grootfs-bench-release
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: You don't need metrics for a thing that doesn't even work! http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: bump-patch-grootfs-release
  serial: true
  plan:
  - get: grootfs-release-version
    params: { bump: patch, pre: rc }
    passed: [ship-bosh-release]
    trigger: true
  - put: grootfs-release-version
    resource: grootfs-release-version
    params: { file: grootfs-release-version/number }

- name: bump-major-grootfs-release
  serial: true
  plan:
  - get: grootfs-release-version
    params: { bump: major, pre: rc }
  - put: grootfs-release-version
    resource: grootfs-release-version
    params: { file: grootfs-release-version/number }

- name: bump-minor-grootfs-release
  serial: true
  plan:
  - get: grootfs-release-version
    params: { bump: minor, pre: rc }
  - put: grootfs-release-version
    resource: grootfs-release-version
    params: { file: grootfs-release-version/number }

- name: ship-bosh-release
  serial: true
  plan:
  - do:
    - aggregate:
      - get: grootfs-ci-secrets
      - get: grootfs-release-develop
        passed:
        - deploy-grootfs-bench
      - get: grootfs-release-master
      - get: grootfs-release-version
        params:
          bump: final
    - task: ship-it
      file: grootfs-release-develop/ci/tasks/ship-it.yml
      params:
        PRIVATE_YML: {{grootfs-release-private-yaml}}
    - aggregate:
      - put: grootfs-release-master
        params:
          repository: release/master
          tag: grootfs-release-version/number
          tag_prefix: v
      - put: grootfs-release-tarball
        params:
          file: final-release/grootfs-*.tgz
      - put: grootfs-gh-release
        params:
          name: grootfs-release-version/number
          tag: grootfs-release-version/number
          tag_prefix: v
          globs:
          - final-release/grootfs-*.tgz
      - put: grootfs-release-version
        params: { file: grootfs-release-version/number }
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: Final bosh release went super wrong. Sorry. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: ship-grootfs
  plan:
  - do:
    - aggregate:
      - get: grootfs-release-master
        passed: [ship-bosh-release]
      - get: grootfs-release-version
        trigger: true
        passed: [ship-bosh-release]
    - task: build-grootfs
      file: grootfs-release-master/src/code.cloudfoundry.org/grootfs/ci/tasks/build-grootfs.yml
    - put: grootfs-git-repo
      params:
        tag: grootfs-release-version/number
        tag_prefix: v
        repository: grootfs-release-master/src/code.cloudfoundry.org/grootfs
        only_tag: true
    - put: grootfs-standalone-gh-release
      params:
        name: grootfs-release-version/number
        tag: grootfs-release-version/number
        tag_prefix: v
        globs:
        - build-grootfs/grootfs-*.tgz
        - build-grootfs/drax-*.tgz
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: I don't know how to create github release anyway!  http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: tag-grootfs-ci-image
  plan:
  - do:
    - aggregate:
      - get: grootfs-release-master
        passed: [ship-bosh-release]
      - get: grootfs-release-version
        trigger: true
        passed: [ship-bosh-release]
    - put: grootfs-ci-image
      params:
        build: grootfs-release-master/src/code.cloudfoundry.org/grootfs
        tag_prefix: v
        tag: grootfs-release-version/number
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: I don't know how to create github release anyway!  http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"


- name: merge-master-into-develop
  serial: true
  plan:
  - do:
    - aggregate:
      - get: grootfs-release-develop
      - get: grootfs-release-master
        passed:
        - ship-bosh-release
        trigger: true
    - task: merge-master-into-develop
      file: grootfs-release-develop/ci/tasks/merge-master-into-develop.yml
    - put: grootfs-release-develop
      params:
        repository: release-merged
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: I CAN'T BUMP DEVELOP. http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: grootfs-bench
  public: true
  plan:
  - aggregate:
    - get: grootfs-bench-git-repo
      trigger: true
  - task: grootfs-bench-tests
    file: grootfs-bench-git-repo/ci/grootfs-bench-tests.yml
    on_failure:
      put: slack-alert
      params:
        username: {{slack-alert-username}}
        icon_url: {{slack-alert-icon-url}}
        channel: {{slack-alert-channel}}
        text: "<!subteam^S1U0HSJ9E|grootfsteam>: I've destroyed your build (groot tests are dead). Come and get me!  http://grootfs.ci.cf-app.com/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: build-grootfs-ci-image
  plan:
  - aggregate:
    - get: grootfs-git-repo-dockerfile
      trigger: true
  - put: grootfs-ci-image
    params:
      build: grootfs-git-repo-dockerfile

- name: deploy-cf
  serial_groups: [deploy-cf]
  plan:
  - aggregate:
    - get: grootfs-release-tarball
    - get: git-cf-deployment
      trigger: true
    - get: grootfs-release-develop
      passed: [create-grootfs-release]
      trigger: true
    - get: grootfs-ci-secrets
    - get: gamora-bosh-stemcell
    - get: garden-release
      trigger: true
    - get: cflinuxfs2-rootfs-release
      trigger: true
    - get: diego-release
      trigger: true
  - task: generate-cf-manifest
    file: grootfs-release-develop/ci/tasks/generate-cf-manifest.yml
    params:
      CF_PASSWORD: {{cf-password}}
      CF_SECRETS: {{cf-secrets}}
      CF_UAA_CERTS: {{cf-uaa-certs}}
      CF_ETCD_CERTS: {{cf-etcd-certs}}
      CF_CC_CERTS: {{cf-cc-certs}}
      CF_CONSUL_CERTS: {{cf-consul-certs}}
      CF_DIEGO_CERTS: {{cf-diego-certs}}
      CF_LOGGREGATOR_CERTS: {{cf-loggregator-certs}}
  - put: cf-deployment
    params:
      manifest: manifests/cf.yml
      releases:
      - diego-release/*.tgz
      - cflinuxfs2-rootfs-release/*.tgz
      - grootfs-release-tarball/*.tgz
      - garden-release/*.tgz
      stemcells:
      - gamora-bosh-stemcell/*.tgz

- name: deploy-datadog-nozzle
  serial_groups: [deploy-datadog-nozzle]
  plan:
  - aggregate:
    - get: grootfs-release-develop
    - get: datadog-nozzle-release
      trigger: true
    - get: grootfs-ci-secrets
    - get: gamora-bosh-stemcell
  - task: generate-manifest
    file: grootfs-release-develop/ci/tasks/generate-datadog-firehose-nozzle-manifest.yml
    params:
      DATADOG_API_KEY: {{datadog-api-key}}
      CF_SECRETS: {{cf-secrets}}
  - put: datadog-nozzle-deployment
    params:
      manifest: manifests/datadog-firehose-nozzle.yml
      releases:
      - datadog-nozzle-release/*.tgz
      stemcells:
      - gamora-bosh-stemcell/*.tgz

- name: CATs
  serial_groups:
  - deploy-cf
  - deploy-datadog-nozzle
  plan:
  - aggregate:
    - get: cats-concourse-task
    - get: grootfs-release-develop
      trigger: true
      passed: [deploy-cf]
    - get: cf-acceptance-tests
  - task: generate-cats-config-json
    file: grootfs-release-develop/ci/tasks/generate-cats-config-json.yml
    params:
      CF_PASSWORD: {{cf-password}}
  - task: run-cats
    file: cats-concourse-task/task.yml

resource_types:
- name: slack-notification-docker
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: tracker-fixed
  type: docker-image
  source:
    repository: concourse/tracker-resource
