#!/bin/bash

set -ex

BASE_PATH=$(dirname $0)

main() {
  source /var/vcap/jobs/grootfs/bin/utils

  export PATH=/var/vcap/packages/grootfs/bin:/var/vcap/packages/xfs-progs/sbin:$PATH

  mkdir -p /var/vcap/data/grootfs/store

  converge_store "privileged"
  converge_store "unprivileged"

  create_loop_devices
  permit_device_control

  init_privileged_store
  init_unprivileged_store

  tardis_setup
}

init_privileged_store() {
  local config_path=/var/vcap/jobs/grootfs/config/privileged_grootfs_config.yml

  echo "Initialising privilged store using config at ${config_path}"

  grootfs --config ${config_path} init-store \
    --store-size-bytes $(volume_size)
}

init_unprivileged_store() {
  local config_path=/var/vcap/jobs/grootfs/config/grootfs_config.yml

  echo "Initialising unprivileged store using config at ${config_path}"

  grootfs --config ${config_path} init-store \
    --store-size-bytes $(volume_size) \
    --uid-mapping "$(unprivileged_root_mapping)" \
    --uid-mapping "$(unprivileged_range_mapping)" \
    --gid-mapping "$(unprivileged_root_mapping)" \
    --gid-mapping "$(unprivileged_range_mapping)"
}


tardis_setup() {
  echo "setting up tardis..."
  chmod u+s /var/vcap/packages/grootfs/bin/tardis
}

# Temporary upgrade path
converge_store() {
  local store_type=$1

  local old_volume_path=/var/vcap/data/grootfs/volume_${store_type}
  local new_volume_path=/var/vcap/data/grootfs/store/${store_type}.backing-store
  local store_path=/var/vcap/data/grootfs/store/${store_type}

  if mount | grep $old_volume_path | grep xfs
  then
    mv $old_volume_path $new_volume_path
    mount -t xfs -o remount,noatime,pquota,nobarrier $new_volume_path $store_path
  fi
}

main
